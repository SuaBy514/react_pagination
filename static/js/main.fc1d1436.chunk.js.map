{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pagesAmount","Math","ceil","pages","i","push","className","href","onClick","map","page","pageCheck","App","useState","setPerPage","setCurrentPage","items","setItems","updateItems","pageSize","offset","to","from","numbers","n","getNumbers","length","id","defaultValue","onChange","event","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8KASaA,EAAwC,SAAC,GASpD,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAkB,GAEfC,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EACrCD,EAAME,KAAKD,GAGb,OACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBR,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,kBAAMV,EAAc,GAAKC,EAAaD,EAAc,IAL/D,oBAWDK,EAAMM,KAAI,SAACC,GACV,IAAMC,EAAYb,IAAgBY,EAElC,OACE,oBACEJ,UAAS,oBAAeK,EAAY,SAAW,IADjD,SAIE,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAI,WAAMG,GACV,gBAAeC,EACfH,QAAS,kBAAME,IAASZ,GAAeC,EAAaW,IALtD,SAOGA,KATEA,MAeX,oBAAIJ,UAAS,oBAAeR,IAAgBE,EAAc,WAAa,IAAvE,SACE,mBACE,UAAQ,WACRM,UAAU,YACVC,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,kBACPV,EAAcE,GAAeD,EAAaD,EAAc,IAN5D,wBCrDKc,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KACA,EAA0BF,mBAAS,CAAC,EAAG,EAAG,EAAG,EAAG,IAAhD,mBAAOG,EAAP,KAAcC,EAAd,KAEA,SAASC,EAAYR,EAAcS,GACjC,IAAMC,GAAUV,EAAO,GAAKS,EAExBE,EAAKF,EAAWC,EAEhBD,EAAWC,EAVH,KAWVC,EAXU,IAcZJ,ECpBG,SAAoBK,EAAcD,GAGvC,IAFA,IAAME,EAAoB,GAEjBC,EAAIF,EAAME,GAAKH,EAAIG,GAAK,EAC/BD,EAAQlB,KAAKmB,GAGf,OAAOD,EDaIE,CAPIL,EAAS,EAOIC,IAc5B,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCkB,EAAM,GADvC,cAC+CA,EAAMA,EAAMU,OAAS,GADpE,eAhCU,GAgCV,OAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,aAAa,IACbC,SArBV,SAA6BC,GAC3BhB,GAAYgB,EAAMC,OAAOC,OACzBd,EAAY,GAAIY,EAAMC,OAAOC,OAC7BjB,EAAe,IAaT,UAOE,wBAAQiB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEV,MA3DQ,GA4DRC,QAASA,EACTC,YAAaA,EACbC,aA7CmB,SAACW,GACxBQ,EAAYR,EAAMb,GAClBkB,EAAeL,MA8Cb,6BACGM,EAAMP,KAAI,SAACyB,GAAD,OACT,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,YEtElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.fc1d1436.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesAmount = Math.ceil(total / perPage);\n  const pages: number[] = [];\n\n  for (let i = 1; i <= pagesAmount; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => currentPage > 1 && onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map((page) => {\n        const pageCheck = currentPage === page;\n\n        return (\n          <li\n            className={`page-item ${pageCheck ? 'active' : ''}`}\n            key={page}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              aria-disabled={pageCheck}\n              onClick={() => page !== currentPage && onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n\n      <li className={`page-item ${currentPage === pagesAmount ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pagesAmount}\n          onClick={() => (\n            currentPage < pagesAmount && onPageChange(currentPage + 1)\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [items, setItems] = useState([1, 2, 3, 4, 5]);\n\n  function updateItems(page: number, pageSize: number) {\n    const offset = (page - 1) * pageSize;\n    const from = offset + 1;\n    let to = pageSize + offset;\n\n    if (pageSize + offset > total) {\n      to = total;\n    }\n\n    setItems(getNumbers(from, to));\n  }\n\n  const handlePageChange = (page: number) => {\n    updateItems(page, perPage);\n    setCurrentPage(page);\n  };\n\n  function handlePerPageChange(event: ChangeEvent<HTMLSelectElement>) {\n    setPerPage(+event.target.value);\n    updateItems(1, +event.target.value);\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${items[0]} - ${items[items.length - 1]} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.map((item) => (\n          <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers: number[] = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}